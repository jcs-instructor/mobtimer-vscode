import { MobState } from "./mobState";
import { Status } from "./status";
import { Command } from "./commands";
export declare class MobTimer {
    private _mobName;
    private _durationMinutes;
    private _whenLastStartedInSeconds;
    private _whenPausedInSeconds;
    private _nowInSecondsFunc;
    private _previouslyAccumulatedElapsedSeconds;
    private _running;
    private _timer;
    private _timerExpireFunc;
    private _ready;
    private _participants;
    constructor(mobName?: string);
    private setExpireTimeout;
    get nextCommand(): Command;
    protected onExpire(): void;
    reset(): void;
    start(): void;
    set nowInSecondsFunc(func: () => number);
    set timerExpireFunc(func: () => void);
    pause(): void;
    get state(): MobState;
    getLogInfo(): {
        mobName: string;
        previouslyAccumulatedElapsedSeconds: number;
        nowInSeconds: number;
        whenLastStartedInSeconds: number;
        elapsedSeconds: number;
    };
    setSecondsRemaining(secondsRemaining: number): void;
    get status(): Status;
    get secondsRemainingString(): string;
    get secondsRemaining(): number;
    private calculateElapsedSeconds;
    get durationMinutes(): number;
    set durationMinutes(duration: number);
    get durationSeconds(): number;
    get participants(): string[];
    addParticipant(name: string): void;
    removeParticipant(index: number): void;
    rotateParticipants(): void;
    editParticipants(participants: string[]): void;
    shuffleParticipants(): void;
}
